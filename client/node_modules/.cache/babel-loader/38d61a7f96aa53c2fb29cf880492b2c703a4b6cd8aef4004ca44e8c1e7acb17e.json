{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jedyv\\\\OneDrive\\\\Desktop\\\\dms-system\\\\client\\\\src\\\\pages\\\\Auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onNavigate\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    senha: '' // Changed from password to senha to match backend\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError(''); // Clear error when user types\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.mensagem || 'Erro ao fazer login');\n      }\n\n      // Store token and user data\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.usuario));\n\n      // Navigate based on user role\n      if (data.usuario.role === 'admin') {\n        onNavigate('admin-dashboard');\n      } else {\n        onNavigate('client-dashboard');\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AutoElite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Bem-vindo de volta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            placeholder: \"seu@email.com\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"senha\",\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"senha\",\n            name: \"senha\",\n            value: formData.senha,\n            onChange: handleChange,\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          disabled: loading,\n          children: loading ? 'Entrando...' : 'Entrar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"N\\xE3o tem uma conta?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onNavigate('register'),\n          className: \"btn btn-text\",\n          children: \"Criar conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"8YgYgTvnGxomR/6dJ3KV0G6xWHc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onNavigate","_s","formData","setFormData","email","senha","error","setError","loading","setLoading","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","mensagem","localStorage","setItem","token","usuario","role","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jedyv/OneDrive/Desktop/dms-system/client/src/pages/Auth/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Login({ onNavigate }) {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    senha: '' // Changed from password to senha to match backend\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    setError(''); // Clear error when user types\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.mensagem || 'Erro ao fazer login');\r\n      }\r\n\r\n      // Store token and user data\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.usuario));\r\n\r\n      // Navigate based on user role\r\n      if (data.usuario.role === 'admin') {\r\n        onNavigate('admin-dashboard');\r\n      } else {\r\n        onNavigate('client-dashboard');\r\n      }\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <div className=\"login-header\">\r\n          <h1>AutoElite</h1>\r\n          <p>Bem-vindo de volta</p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              placeholder=\"seu@email.com\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"senha\">Senha</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"senha\"\r\n              name=\"senha\"\r\n              value={formData.senha}\r\n              onChange={handleChange}\r\n              placeholder=\"••••••••\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-primary btn-block\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Entrando...' : 'Entrar'}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"login-footer\">\r\n          <p>Não tem uma conta?</p>\r\n          <button \r\n            onClick={() => onNavigate('register')} \r\n            className=\"btn btn-text\"\r\n          >\r\n            Criar conta\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE,CAAC;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCX,WAAW,CAACY,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;IACHN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBR,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMuB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,QAAQ,IAAI,qBAAqB,CAAC;MACzD;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,KAAK,CAAC;MACzCF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACC,IAAI,CAACQ,OAAO,CAAC,CAAC;;MAE1D;MACA,IAAIR,IAAI,CAACQ,OAAO,CAACC,IAAI,KAAK,OAAO,EAAE;QACjClC,UAAU,CAAC,iBAAiB,CAAC;MAC/B,CAAC,MAAM;QACLA,UAAU,CAAC,kBAAkB,CAAC;MAChC;IAEF,CAAC,CAAC,OAAOmC,GAAG,EAAE;MACZ5B,QAAQ,CAAC4B,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACR3B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA;IAAKuC,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBxC,OAAA;MAAKuC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BxC,OAAA;QAAKuC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BxC,OAAA;UAAAwC,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB5C,OAAA;UAAAwC,QAAA,EAAG;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,EAELpC,KAAK,iBACJR,OAAA;QAAKuC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BhC;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED5C,OAAA;QAAM6C,QAAQ,EAAE3B,YAAa;QAACqB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAClDxC,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBxC,OAAA;YAAO8C,OAAO,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpC5C,OAAA;YACE+C,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVlC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEX,QAAQ,CAACE,KAAM;YACtB2C,QAAQ,EAAErC,YAAa;YACvBsC,WAAW,EAAC,eAAe;YAC3BC,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5C,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBxC,OAAA;YAAO8C,OAAO,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpC5C,OAAA;YACE+C,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,OAAO;YACVlC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEX,QAAQ,CAACG,KAAM;YACtB0C,QAAQ,EAAErC,YAAa;YACvBsC,WAAW,EAAC,kDAAU;YACtBC,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5C,OAAA;UACE+C,IAAI,EAAC,QAAQ;UACbR,SAAS,EAAC,2BAA2B;UACrCa,QAAQ,EAAE1C,OAAQ;UAAA8B,QAAA,EAEjB9B,OAAO,GAAG,aAAa,GAAG;QAAQ;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEP5C,OAAA;QAAKuC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BxC,OAAA;UAAAwC,QAAA,EAAG;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzB5C,OAAA;UACEqD,OAAO,EAAEA,CAAA,KAAMnD,UAAU,CAAC,UAAU,CAAE;UACtCqC,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzC,EAAA,CArHQF,KAAK;AAAAqD,EAAA,GAALrD,KAAK;AAuHd,eAAeA,KAAK;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}